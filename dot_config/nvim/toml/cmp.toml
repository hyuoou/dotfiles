[[plugins]]
repo = 'hrsh7th/nvim-cmp'
on_event = ['InsertEnter', 'CursorHold']
lua_source = '''
  local cmp = require('cmp')
  local keymap = require('cmp.utils.keymap')
  local cmp_autopairs = require('nvim-autopairs.completion.cmp')

  cmp.setup({
    snippet = {
      expand = function(args)
        vim.fn["vsnip#anonymous"](args.body)
      end,
    },
    window = {
      documentation = cmp.config.window.bordered(),
    },
    mapping = cmp.mapping.preset.insert({
      ['<C-u>'] = cmp.mapping.scroll_docs(-4),
      ['<C-d>'] = cmp.mapping.scroll_docs(4),
      ['<C-c>'] = cmp.mapping.abort(),
      ['<C-e>'] = cmp.mapping(function()
        vim.api.nvim_feedkeys(keymap.t('<End>'), 'i', false)
      end),
      ['<CR>'] = cmp.mapping.confirm({ select = true }),
    }),
    sources = cmp.config.sources({
      { name = 'nvim_lsp' },
      { name = 'vsnip' },
      { name = 'buffer' },
      { name = 'tmux' },
      { name = 'path' },
    })
  })

  cmp.setup.filetype({ 'NeogitCommitMessage', 'gitcommit', 'markdown' }, {
    sources = cmp.config.sources({
      { name = 'buffer' },
      { name = 'tmux' },
      { name = 'path' },
      { name = 'mocword' },
    })
  })

  cmp.setup.cmdline(':', {
    mapping = cmp.mapping.preset.cmdline(),
    sources = cmp.config.sources({
      { name = 'cmdline' },
      { name = 'cmdline_history' },
      { name = 'path' }
    })
  })

  cmp.event:on(
    'confirm_done',
    cmp_autopairs.on_confirm_done()
  )
'''

# cmp sources
[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'yutkat/cmp-mocword'
depends = ['plenary.nvim']
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-cmdline'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'dmitmel/cmp-cmdline-history'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'andersevenrud/cmp-tmux'
on_source = 'nvim-cmp'

# snippet
[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_source = 'nvim-cmp'
hook_add = '''
  let g:vsnip_snippet_dir = '$HOME/.config/nvim/vsnip'
  imap <expr> <Tab>   vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<Tab>'
  smap <expr> <Tab>   vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<Tab>'
  imap <expr> <S-Tab> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'
  smap <expr> <S-Tab> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<S-Tab>'
'''

[[plugins]]
repo = 'hrsh7th/cmp-vsnip'
on_source = 'nvim-cmp'

# autopairs
[[plugins]]
repo = 'windwp/nvim-autopairs'
on_source = 'nvim-cmp'
lua_source = '''
  require('nvim-autopairs').setup()
'''
